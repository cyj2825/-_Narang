pipeline {
    agent any
    tools {
        // 여기서 뒤 이름을 우리가 젠킨스에서 설정하는 것. 
        gradle 'Gradle'
    }
    stages {
        stage('Checkout') {
            steps {
                // 소스 코드 체크아웃
                checkout scm
            }
        }
        stage('Jar Build') {
            steps {
                // Gradle을 사용하여 trip-service 프로젝트 빌드
                sh "cd backend/user-service && chmod +x gradlew && ./gradlew clean build"
            }
        }
        stage('Docker Image Build') {
            steps {
                // 빌드된 JAR 파일 도커 이미지로 생성 
                // sh 'cp backend/user-service/build/libs/user-service-0.0.1-SNAPSHOT.jar backend/deployments'
                // sh 'pwd && ls'
                
                // sh('echo "docker running"')
                // sh('docker ps -a')
                // sh('docker ps -a | grep "user-service"')
                // sh('docker ps -a | grep "user-service" | awk \'{print $1}\'' )
                sh('(docker ps -a | grep "8081" | awk \'{print $1}\') | xargs docker stop || true' )

                sh('chmod +x ./jenkins/port-refresh-user.sh')

                // echo 'No user-service running . . . About to Build a image . . .'
                sh 'docker build -t user-service -f ./backend/user-service/Dockerfile .'
                // 배포 스크립트 실행 (예: Docker 컨테이너에 배포)
                sh 'docker run -p 8081:8081 -d user-service'
            }
        }
    }
}
